// the idea of the whole structure that will be under testing  
/*module project(input logic clk,
               input logic reset,
               output logic [6:0] segments
               );
logic [63:0] x;
logic [3:0] data;

graycode g_raycode(x[63:0]);
counter  C_ounter(clk, reset, x[63:0], data[3:0]);
sevenseg s_evenseg(data[3:0], segments[6:0]);
endmodule*/
 
module testbench3();
logic clk;
logic reset;
logic [63:0] x;
logic [3:0] data;
logic [6:0] segments;

// instance 
graycode g_raycode(x[63:0]);
counter  C_ounter(clk, reset, x[63:0], data[3:0]);
sevenseg s_evenseg(data[3:0], segments[6:0]);

always
begin
clk=1; #50; 
clk=~clk; #50;
end

initial
begin
reset=1; #25;
reset=0;
end

always
begin
#10;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h0 & segments[6:0] == 7'b111_1110 ) $display ("SUCCESS");  else $error("0 failed");
#65;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h0 & segments[6:0] == 7'b111_1110 ) $display ("SUCCESS"); else $error("0 failed");
#50;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h1 & segments[6:0] == 7'b011_0000) $display ("SUCCESS"); else $error("1 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h3 & segments[6:0] == 7'b111_1001) $display ("SUCCESS"); else $error("3 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h2 & segments[6:0] == 7'b110_1100) $display ("SUCCESS"); else $error("2 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h6 & segments[6:0] == 7'b101_1111) $display ("SUCCESS"); else $error("6 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h7 & segments[6:0] == 7'b111_0000) $display ("SUCCESS"); else $error("7 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h5 & segments[6:0] == 7'b101_1011) $display ("SUCCESS"); else $error("5 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h4 & segments[6:0] == 7'b011_0011) $display ("SUCCESS"); else $error("4 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'hc & segments[6:0] == 7'b000_1101) $display ("SUCCESS"); else $error("c failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'hd & segments[6:0] == 7'b011_1101) $display ("SUCCESS"); else $error("d failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'hf & segments[6:0] == 7'b100_0111) $display ("SUCCESS"); else $error("f failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'he & segments[6:0] == 7'b100_1111) $display ("SUCCESS"); else $error("e failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'ha & segments[6:0] == 7'b111_0111) $display ("SUCCESS"); else $error("a failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'hb & segments[6:0] == 7'b001_1111) $display ("SUCCESS"); else $error("b failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h9 & segments[6:0] == 7'b111_0011) $display ("SUCCESS"); else $error("9 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h8 & segments[6:0] == 7'b111_1111) $display ("SUCCESS"); else $error("8 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h0 & segments[6:0] == 7'b111_1110) $display ("SUCCESS"); else $error("0 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h1 & segments[6:0] == 7'b011_0000) $display ("SUCCESS"); else $error("1 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h3 & segments[6:0] == 7'b111_1001) $display ("SUCCESS"); else $error("3 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h2 & segments[6:0] == 7'b110_1100) $display ("SUCCESS"); else $error("2 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h6 & segments[6:0] == 7'b101_1111) $display ("SUCCESS"); else $error("6 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h7 & segments[6:0] == 7'b111_0000) $display ("SUCCESS"); else $error("7 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h5 & segments[6:0] == 7'b101_1011) $display ("SUCCESS"); else $error("5 failed");
#100;
assert (x[63:0]==64'h01326754cdfeab98 & data[3:0]== 4'h4 & segments[6:0] == 7'b011_0011) $display ("SUCCESS"); else $error("4 failed");
#75;
end

endmodule 

